#version 450

layout(location = 0)
	out vec4 cFragColor;
		
in vec2 vTexCoord;
	uniform sampler2D uAudio;
uniform vec2 uResolution;

vec4 alterCol(float mixVar)
{
	vec4 coolCol = vec4(0.0,0.5,1.0,1.0);
	vec4 warmCol = vec4(1.0,0.5,0.0,1.0);
	//mix formula is x * (1-a)+y*a
	//x is our coolCol, y is our warmCol, and a is mixVar
	//both give the same return one simply is more directly controlled.
	return coolCol* (1.0 - mixVar) + warmCol * mixVar;
//	return mix(coolCol,warmCol,mixVar);
}

//lerp formula found quick was a +(b-a ) * x
vec4 alterColTwo(float lerpVar)
{
	vec4 coolCol = vec4(0.0,0.5,1.0,1.0);
	vec4 warmCol = vec4(1.0,0.5,0.0,1.0);
	return coolCol + (warmCol - coolCol) * lerpVar;
}
//https://en.wikipedia.org/wiki/Linear_interpolation
//precise form lerp
//whenever t = 1 it shows col1
//formula is (1 - t) * col0 + t *col1
vec4 lerpCol(float t)
{
	vec4 coolCol = vec4(0.0,0.5,1.0,1.0);
	vec4 warmCol = vec4(1.0,0.5,0.0,1.0);
	return (1.0 - t) * coolCol + t * warmCol;
}
//Using consistent audios of varying hz the sphere oddly enough has a hard
//time with anything over 1khz so far within my testing. With the current
//setup we see more tearing with pink noise that may be due to the small
//gaps in between pieces of it. 
// 1kHz seems to show the nicest fluctuation in our sphere
//50hz despite being our lowest value before post processing is my least
//favorite with two rapidly flashing quarters is unappealing.
//It simply does this too quickly to give off a desired look and gives
//a nice show of the floor of our current processing.
//100Hz I would say is the lowest I would run with my current setup.
//You can see calm movement of the middle bar and more moderate flashing
//in the stable 100Hz range. I am going to think of a solution to the
//current issue though.
void main()
{
	//this is already put 0 to 1
	//https://academo.org/demos/spectrum-analyzer/
	vec4 audioTexture = vec4(texture(uAudio, vTexCoord).x);
	cFragColor = vec4(audioTexture.x, 0.0,0.0,1.0); 
//	cFragColor = alterCol(audioTexture.x);
//	cFragColor = alterColTwo(audioTexture.x);
	cFragColor = lerpCol(audioTexture.x);
}
